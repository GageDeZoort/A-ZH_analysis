import sys
from time import time

import yaml
import pandas as pd
import numpy as np
from coffea import processor

sys.path.append('../')
from processors.signal_processor import SignalProcessor

with open("../sample_lists/samples_sync/AToZhToLLTauTau_M220_2018_samples.yaml", 'r') as stream:
    try:
        fileset = yaml.safe_load(stream)
    except yaml.YAMLError as exc:
        print(exc)

checkfile = open('output_files/desy.csv')
checklist = pd.read_csv(checkfile)

t0 = time()
out = processor.run_uproot_job (
    fileset,
    treename='Events',
    processor_instance=SignalProcessor(sync=True, categories=['eemt'],
                                       checklist=checklist),
    executor=processor.futures_executor,
    executor_args={'workers':20, 'flatten': True, "nano": True},
    #chunksize=1000,
    #maxchunks=50,
)

print(out['cutflow_sync'].items())
print(out['cutflow'].items())

lumi = np.array(out['lumi'].value, dtype=int)
run = np.array(out['run'].value, dtype=int)
evt = np.array(out['evt'].value, dtype=int)

if (len(sys.argv)==1):
    filename = 'sync_out.csv'
else:
    filename = sys.argv[1]

sync_file = open(filename, 'w')
sync_file.write('run,lumi,evtid\n')
for i, e in enumerate(evt):
   sync_file.write('{0:d},{1:d},{2:d}\n'
                   .format(run[i], lumi[i], evt[i]))
sync_file.close()

# extract SVfit quantities
np.savez(filename.split('.')[0] + '.npz',
         lumi=lumi, evt=evt, 
         pt1=np.array(out['l1_pt'].value, dtype=float),
         pt2=np.array(out['l2_pt'].value, dtype=float),
         pt3=np.array(out['t1_pt'].value, dtype=float),
         pt4=np.array(out['t2_pt'].value, dtype=float),
)

a = np.load(filename.split('.')[0] + '.npz')
print(a['pt1'])
print("Processing took {0} s".format(time()-t0))

